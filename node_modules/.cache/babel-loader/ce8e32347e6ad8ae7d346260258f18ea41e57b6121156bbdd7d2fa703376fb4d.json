{"ast":null,"code":"var _jsxFileName = \"/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/src/componentes/Nota/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nota() {\n  _s();\n  const [quantidadeNotas, setQuantidadesNotas] = useState(0);\n  const [notas, setNotas] = useState([]);\n  const [resultado, setResultado] = useState('');\n  const lidarComQuantidadeNotas = event => {\n    setQuantidadesNotas(event.target.value);\n    setNotas([]);\n  };\n  const lidarComAlteracaoNota = (event, index) => {\n    const novasNotas = [...notas];\n    novasNotas[index] = event.target.value;\n  };\n  const lidarComEnvio = () => {\n    let reprovados = 0;\n    let aprovados = 0;\n    for (let i = 0; i < quantidadeNotas; i++) {\n      if (notas[i] < 5) {\n        reprovados++;\n      } else {\n        aprovados++;\n      }\n    }\n    setResultado(`foram aprovados ${aprovados} e ${reprovados} foram reprovados`);\n  };\n  const renderizarNotas = () => {\n    const inputsNotas = [];\n    for (let i = 0; i < quantidadeNotas; i++) {\n      inputsNotas.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Nota \", i + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: notas[i] || '',\n            onChange: e => lidarComAlteracaoNota(e, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    }\n    return inputsNotas;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"quantas notas voce quer analisar?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Nota, \"iMQexX+N2hS4NihA8fhzoB6Rlck=\");\n_c = Nota;\nexport default Nota;\nvar _c;\n$RefreshReg$(_c, \"Nota\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Nota","_s","quantidadeNotas","setQuantidadesNotas","notas","setNotas","resultado","setResultado","lidarComQuantidadeNotas","event","target","value","lidarComAlteracaoNota","index","novasNotas","lidarComEnvio","reprovados","aprovados","i","renderizarNotas","inputsNotas","push","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/src/componentes/Nota/index.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction Nota(){\n  const [quantidadeNotas, setQuantidadesNotas] = useState(0)\n  const [notas,setNotas]= useState([]);\n  const [resultado,setResultado] = useState('')\n\n  const lidarComQuantidadeNotas = (event)=>{\n    setQuantidadesNotas(event.target.value);\n    setNotas([]);\n  }\n  const lidarComAlteracaoNota = (event, index) =>{\n    const novasNotas = [...notas]\n    novasNotas[index] =event.target.value\n  }\n  const lidarComEnvio = () => {\n    let reprovados = 0\n    let aprovados = 0 \n\n    for (let i = 0 ; i<quantidadeNotas; i++){\n      if (notas[i] < 5){\n        reprovados ++\n      }\n      else {\n        aprovados++\n      }  \n    }\n    setResultado(`foram aprovados ${aprovados} e ${reprovados} foram reprovados` )\n  }\n\n  const renderizarNotas = () => {\n\n    const inputsNotas = []\n\n    for (let i= 0 ; i<quantidadeNotas;i++){\n      inputsNotas.push(\n        <div key={i}>\n          <label> Nota {i+1}: \n          <input type=\"number\" value={notas[i] || ''} onChange= {(e)=>lidarComAlteracaoNota(e,i)}/>\n          </label>\n        </div>\n      )\n    }\n    return inputsNotas\n  };\n  return(\n    <div>\n      <div>\n        <label>\n          quantas notas voce quer analisar?\n          <input type = \"number\" value=''/>\n        </label>\n      </div>\n    </div>\n  )\n}\nexport default Nota"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}