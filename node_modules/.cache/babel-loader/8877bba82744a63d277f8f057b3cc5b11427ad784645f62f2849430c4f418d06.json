{"ast":null,"code":"var _jsxFileName = \"/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/src/componentes/Somatorio/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Somatorio() {\n  _s();\n  const [qtdeNumeros, setQtdeNumeros] = useState(\"\");\n  const [somatorio, setSomatorio] = useState(0);\n  const [numerosSomados, setNumerosSomados] = useState(0);\n  const handleQtdeNumerosChange = event => {\n    setQtdeNumeros(event.target.value);\n  };\n  const lidarComAlteracao = event => {\n    const novoNumero = Number(event.target.value);\n    setSomatorio(somatorio + novoNumero);\n    setNumerosSomados(numerosSomados + 1);\n  };\n  const mostrarSomatorio = () => {\n    return numerosSomados === Number(qtdeNumeros) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"O somat\\xF3rio dos n\\xFAmeros \\xE9: \", somatorio]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Digite a quantidade de n\\xFAmeros a serem somados:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: qtdeNumeros,\n      onChange: handleQtdeNumerosChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), [...Array(Number(qtdeNumeros))].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Digite o n\\xFAmero \", index + 1, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: handleNumeroChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), mostrarSomatorio()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Somatorio, \"Y6fHopHO+EvD1vYrvZ2+Hx2AZcc=\");\n_c = Somatorio;\nexport default Somatorio;\nvar _c;\n$RefreshReg$(_c, \"Somatorio\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Somatorio","_s","qtdeNumeros","setQtdeNumeros","somatorio","setSomatorio","numerosSomados","setNumerosSomados","handleQtdeNumerosChange","event","target","value","lidarComAlteracao","novoNumero","Number","mostrarSomatorio","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","Array","map","_","index","handleNumeroChange","_c","$RefreshReg$"],"sources":["/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/src/componentes/Somatorio/index.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Somatorio() {\n  const [qtdeNumeros, setQtdeNumeros] = useState(\"\");\n  const [somatorio, setSomatorio] = useState(0);\n  const [numerosSomados, setNumerosSomados] = useState(0);\n\n  const handleQtdeNumerosChange = (event) => {\n    setQtdeNumeros(event.target.value);\n  };\n\n  const lidarComAlteracao = (event) => {\n    const novoNumero = Number(event.target.value);\n    setSomatorio(somatorio + novoNumero);\n    setNumerosSomados(numerosSomados + 1);\n  };\n\n  const mostrarSomatorio = () => {\n    return numerosSomados === Number(qtdeNumeros) ? (\n      <div>O somatório dos números é: {somatorio}</div>\n    ) : null;\n  };\n\n  return (\n    <div>\n      <label>Digite a quantidade de números a serem somados:</label>\n      <input type=\"number\" value={qtdeNumeros} onChange={handleQtdeNumerosChange} />\n      {[...Array(Number(qtdeNumeros))].map((_, index) => (\n        <div key={index}>\n          <label>Digite o número {index + 1}:</label>\n          <input type=\"number\" onChange={handleNumeroChange} />\n        </div>\n      ))}\n      {mostrarSomatorio()}\n    </div>\n  );\n}\n\nexport default Somatorio;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMW,uBAAuB,GAAIC,KAAK,IAAK;IACzCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACnC,MAAMI,UAAU,GAAGC,MAAM,CAACL,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7CN,YAAY,CAACD,SAAS,GAAGS,UAAU,CAAC;IACpCN,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOT,cAAc,KAAKQ,MAAM,CAACZ,WAAW,CAAC,gBAC3CH,OAAA;MAAAiB,QAAA,GAAK,sCAA2B,EAACZ,SAAS;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,GAC/C,IAAI;EACV,CAAC;EAED,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAO;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC9DrB,OAAA;MAAOsB,IAAI,EAAC,QAAQ;MAACV,KAAK,EAAET,WAAY;MAACoB,QAAQ,EAAEd;IAAwB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAC7E,CAAC,GAAGG,KAAK,CAACT,MAAM,CAACZ,WAAW,CAAC,CAAC,CAAC,CAACsB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC5C3B,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,GAAO,qBAAgB,EAACU,KAAK,GAAG,CAAC,EAAC,GAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC3CrB,OAAA;QAAOsB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAEK;MAAmB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,GAF7CM,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIhB,CAAC,EACDL,gBAAgB,EAAE;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEV;AAACnB,EAAA,CAlCQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}