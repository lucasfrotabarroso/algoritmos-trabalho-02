{"ast":null,"code":"import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport function completion(yargs, usage, command, shim) {\n  const self = {\n    completionKey: 'get-yargs-completions'\n  };\n  let aliases;\n  self.setParsed = function setParsed(parsed) {\n    aliases = parsed.aliases;\n  };\n  const zshShell = shim.getEnv('SHELL') && shim.getEnv('SHELL').indexOf('zsh') !== -1 || shim.getEnv('ZSH_NAME') && shim.getEnv('ZSH_NAME').indexOf('zsh') !== -1;\n  self.getCompletion = function getCompletion(args, done) {\n    const completions = [];\n    const current = args.length ? args[args.length - 1] : '';\n    const argv = yargs.parse(args, true);\n    const parentCommands = yargs.getContext().commands;\n    function runCompletionFunction(argv) {\n      assertNotStrictEqual(completionFunction, null, shim);\n      if (isSyncCompletionFunction(completionFunction)) {\n        const result = completionFunction(current, argv);\n        if (isPromise(result)) {\n          return result.then(list => {\n            shim.process.nextTick(() => {\n              done(list);\n            });\n          }).catch(err => {\n            shim.process.nextTick(() => {\n              throw err;\n            });\n          });\n        }\n        return done(result);\n      } else {\n        return completionFunction(current, argv, completions => {\n          done(completions);\n        });\n      }\n    }\n    if (completionFunction) {\n      return isPromise(argv) ? argv.then(runCompletionFunction) : runCompletionFunction(argv);\n    }\n    const handlers = command.getCommandHandlers();\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      if (handlers[args[i]] && handlers[args[i]].builder) {\n        const builder = handlers[args[i]].builder;\n        if (isCommandBuilderCallback(builder)) {\n          const y = yargs.reset();\n          builder(y);\n          return y.argv;\n        }\n      }\n    }\n    if (!current.match(/^-/) && parentCommands[parentCommands.length - 1] !== current) {\n      usage.getCommands().forEach(usageCommand => {\n        const commandName = parseCommand(usageCommand[0]).cmd;\n        if (args.indexOf(commandName) === -1) {\n          if (!zshShell) {\n            completions.push(commandName);\n          } else {\n            const desc = usageCommand[1] || '';\n            completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n          }\n        }\n      });\n    }\n    if (current.match(/^-/) || current === '' && completions.length === 0) {\n      const descs = usage.getDescriptions();\n      const options = yargs.getOptions();\n      Object.keys(options.key).forEach(key => {\n        const negable = !!options.configuration['boolean-negation'] && options.boolean.includes(key);\n        let keyAndAliases = [key].concat(aliases[key] || []);\n        if (negable) keyAndAliases = keyAndAliases.concat(keyAndAliases.map(key => `no-${key}`));\n        function completeOptionKey(key) {\n          const notInArgs = keyAndAliases.every(val => args.indexOf(`--${val}`) === -1);\n          if (notInArgs) {\n            const startsByTwoDashes = s => /^--/.test(s);\n            const isShortOption = s => /^[^0-9]$/.test(s);\n            const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n            if (!zshShell) {\n              completions.push(dashes + key);\n            } else {\n              const desc = descs[key] || '';\n              completions.push(dashes + `${key.replace(/:/g, '\\\\:')}:${desc.replace('__yargsString__:', '')}`);\n            }\n          }\n        }\n        completeOptionKey(key);\n        if (negable && !!options.default[key]) completeOptionKey(`no-${key}`);\n      });\n    }\n    done(completions);\n  };\n  self.generateCompletionScript = function generateCompletionScript($0, cmd) {\n    let script = zshShell ? templates.completionZshTemplate : templates.completionShTemplate;\n    const name = shim.path.basename($0);\n    if ($0.match(/\\.js$/)) $0 = `./${$0}`;\n    script = script.replace(/{{app_name}}/g, name);\n    script = script.replace(/{{completion_command}}/g, cmd);\n    return script.replace(/{{app_path}}/g, $0);\n  };\n  let completionFunction = null;\n  self.registerFunction = fn => {\n    completionFunction = fn;\n  };\n  return self;\n}\nfunction isSyncCompletionFunction(completionFunction) {\n  return completionFunction.length < 3;\n}","map":{"version":3,"names":["isCommandBuilderCallback","assertNotStrictEqual","templates","isPromise","parseCommand","completion","yargs","usage","command","shim","self","completionKey","aliases","setParsed","parsed","zshShell","getEnv","indexOf","getCompletion","args","done","completions","current","length","argv","parse","parentCommands","getContext","commands","runCompletionFunction","completionFunction","isSyncCompletionFunction","result","then","list","process","nextTick","catch","err","handlers","getCommandHandlers","i","ii","builder","y","reset","match","getCommands","forEach","usageCommand","commandName","cmd","push","desc","replace","descs","getDescriptions","options","getOptions","Object","keys","key","negable","configuration","boolean","includes","keyAndAliases","concat","map","completeOptionKey","notInArgs","every","val","startsByTwoDashes","s","test","isShortOption","dashes","default","generateCompletionScript","$0","script","completionZshTemplate","completionShTemplate","name","path","basename","registerFunction","fn"],"sources":["/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/node_modules/yargs/build/lib/completion.js"],"sourcesContent":["import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport function completion(yargs, usage, command, shim) {\n    const self = {\n        completionKey: 'get-yargs-completions',\n    };\n    let aliases;\n    self.setParsed = function setParsed(parsed) {\n        aliases = parsed.aliases;\n    };\n    const zshShell = (shim.getEnv('SHELL') && shim.getEnv('SHELL').indexOf('zsh') !== -1) ||\n        (shim.getEnv('ZSH_NAME') && shim.getEnv('ZSH_NAME').indexOf('zsh') !== -1);\n    self.getCompletion = function getCompletion(args, done) {\n        const completions = [];\n        const current = args.length ? args[args.length - 1] : '';\n        const argv = yargs.parse(args, true);\n        const parentCommands = yargs.getContext().commands;\n        function runCompletionFunction(argv) {\n            assertNotStrictEqual(completionFunction, null, shim);\n            if (isSyncCompletionFunction(completionFunction)) {\n                const result = completionFunction(current, argv);\n                if (isPromise(result)) {\n                    return result\n                        .then(list => {\n                        shim.process.nextTick(() => {\n                            done(list);\n                        });\n                    })\n                        .catch(err => {\n                        shim.process.nextTick(() => {\n                            throw err;\n                        });\n                    });\n                }\n                return done(result);\n            }\n            else {\n                return completionFunction(current, argv, completions => {\n                    done(completions);\n                });\n            }\n        }\n        if (completionFunction) {\n            return isPromise(argv)\n                ? argv.then(runCompletionFunction)\n                : runCompletionFunction(argv);\n        }\n        const handlers = command.getCommandHandlers();\n        for (let i = 0, ii = args.length; i < ii; ++i) {\n            if (handlers[args[i]] && handlers[args[i]].builder) {\n                const builder = handlers[args[i]].builder;\n                if (isCommandBuilderCallback(builder)) {\n                    const y = yargs.reset();\n                    builder(y);\n                    return y.argv;\n                }\n            }\n        }\n        if (!current.match(/^-/) &&\n            parentCommands[parentCommands.length - 1] !== current) {\n            usage.getCommands().forEach(usageCommand => {\n                const commandName = parseCommand(usageCommand[0]).cmd;\n                if (args.indexOf(commandName) === -1) {\n                    if (!zshShell) {\n                        completions.push(commandName);\n                    }\n                    else {\n                        const desc = usageCommand[1] || '';\n                        completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n                    }\n                }\n            });\n        }\n        if (current.match(/^-/) || (current === '' && completions.length === 0)) {\n            const descs = usage.getDescriptions();\n            const options = yargs.getOptions();\n            Object.keys(options.key).forEach(key => {\n                const negable = !!options.configuration['boolean-negation'] &&\n                    options.boolean.includes(key);\n                let keyAndAliases = [key].concat(aliases[key] || []);\n                if (negable)\n                    keyAndAliases = keyAndAliases.concat(keyAndAliases.map(key => `no-${key}`));\n                function completeOptionKey(key) {\n                    const notInArgs = keyAndAliases.every(val => args.indexOf(`--${val}`) === -1);\n                    if (notInArgs) {\n                        const startsByTwoDashes = (s) => /^--/.test(s);\n                        const isShortOption = (s) => /^[^0-9]$/.test(s);\n                        const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n                        if (!zshShell) {\n                            completions.push(dashes + key);\n                        }\n                        else {\n                            const desc = descs[key] || '';\n                            completions.push(dashes +\n                                `${key.replace(/:/g, '\\\\:')}:${desc.replace('__yargsString__:', '')}`);\n                        }\n                    }\n                }\n                completeOptionKey(key);\n                if (negable && !!options.default[key])\n                    completeOptionKey(`no-${key}`);\n            });\n        }\n        done(completions);\n    };\n    self.generateCompletionScript = function generateCompletionScript($0, cmd) {\n        let script = zshShell\n            ? templates.completionZshTemplate\n            : templates.completionShTemplate;\n        const name = shim.path.basename($0);\n        if ($0.match(/\\.js$/))\n            $0 = `./${$0}`;\n        script = script.replace(/{{app_name}}/g, name);\n        script = script.replace(/{{completion_command}}/g, cmd);\n        return script.replace(/{{app_path}}/g, $0);\n    };\n    let completionFunction = null;\n    self.registerFunction = fn => {\n        completionFunction = fn;\n    };\n    return self;\n}\nfunction isSyncCompletionFunction(completionFunction) {\n    return completionFunction.length < 3;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}