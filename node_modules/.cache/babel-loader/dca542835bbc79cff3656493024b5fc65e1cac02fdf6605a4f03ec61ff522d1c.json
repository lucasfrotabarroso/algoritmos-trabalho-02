{"ast":null,"code":"var _jsxFileName = \"/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/src/componentes/Nota/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nota() {\n  _s();\n  const [quantidadeNotas, setQuantidadeNotas] = useState(0);\n  const [notas, setNotas] = useState([]);\n  const [resultado, setResultado] = useState('');\n  const lidarComQuantidadeNotas = event => {\n    setQuantidadeNotas(event.target.value);\n    setNotas([]);\n  };\n  const lidarComAlteracaoNota = (event, index) => {\n    const novasNotas = [...notas];\n    novasNotas[index] = event.target.value;\n    setNotas(novasNotas);\n  };\n  const lidarComEnvio = () => {\n    let reprovados = 0;\n    let aprovados = 0;\n    for (let i = 0; i < quantidadeNotas; i++) {\n      if (notas[i] < 5) {\n        reprovados++;\n      } else {\n        aprovados++;\n      }\n    }\n    setResultado(`Foram aprovados ${aprovados} e ${reprovados} foram reprovados.`);\n  };\n  const renderizarNotas = () => {\n    const inputsNotas = [];\n    for (let i = 0; i < quantidadeNotas; i++) {\n      inputsNotas.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nota \", i + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: notas[i] || '',\n            onChange: e => lidarComAlteracaoNota(e, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this));\n    }\n    return inputsNotas;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Quantas notas voc\\xEA quer analisar?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantidadeNotas,\n          onChange: lidarComQuantidadeNotas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), quantidadeNotas > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderizarNotas(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: lidarComEnvio,\n        children: \"Calcular notas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), resultado && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: resultado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Nota, \"UFfOYGAU6QR5eLoTYEYoSrm52jI=\");\n_c = Nota;\nexport default Nota;\nvar _c;\n$RefreshReg$(_c, \"Nota\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Nota","_s","quantidadeNotas","setQuantidadeNotas","notas","setNotas","resultado","setResultado","lidarComQuantidadeNotas","event","target","value","lidarComAlteracaoNota","index","novasNotas","lidarComEnvio","reprovados","aprovados","i","renderizarNotas","inputsNotas","push","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lucasfrotabarroso/Desktop/util/react-algoritmo/src/componentes/Nota/index.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Nota() {\n  const [quantidadeNotas, setQuantidadeNotas] = useState(0);\n  const [notas, setNotas] = useState([]);\n  const [resultado, setResultado] = useState('');\n\n  const lidarComQuantidadeNotas = (event) => {\n    setQuantidadeNotas(event.target.value);\n    setNotas([]);\n  };\n\n  const lidarComAlteracaoNota = (event, index) => {\n    const novasNotas = [...notas];\n    novasNotas[index] = event.target.value;\n    setNotas(novasNotas);\n  };\n\n  const lidarComEnvio = () => {\n    let reprovados = 0;\n    let aprovados = 0;\n\n    for (let i = 0; i < quantidadeNotas; i++) {\n      if (notas[i] < 5) {\n        reprovados++;\n      } else {\n        aprovados++;\n      }\n    }\n\n    setResultado(`Foram aprovados ${aprovados} e ${reprovados} foram reprovados.`);\n  };\n\n  const renderizarNotas = () => {\n    const inputsNotas = [];\n\n    for (let i = 0; i < quantidadeNotas; i++) {\n      inputsNotas.push(\n        <div key={i}>\n          <label>\n            Nota {i + 1}:\n            <input type=\"number\" value={notas[i] || ''} onChange={(e) => lidarComAlteracaoNota(e, i)} />\n          </label>\n        </div>\n      );\n    }\n\n    return inputsNotas;\n  };\n\n  return (\n    <div>\n      <div>\n        <label>\n          Quantas notas vocÃª quer analisar?\n          <input type=\"number\" value={quantidadeNotas} onChange={lidarComQuantidadeNotas} />\n        </label>\n      </div>\n      {quantidadeNotas > 0 && (\n        <div>\n          {renderizarNotas()}\n          <button onClick={lidarComEnvio}>Calcular notas</button>\n        </div>\n      )}\n      {resultado && <div>{resultado}</div>}\n    </div>\n  );\n}\n\nexport default Nota;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}