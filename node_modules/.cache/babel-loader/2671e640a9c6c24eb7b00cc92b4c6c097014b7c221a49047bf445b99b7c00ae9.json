{"ast":null,"code":"var _jsxFileName = \"/Users/lucasfrotabarroso/Desktop/algoritmo-react-atividade02/src/componentes/QuickSort/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuickSort() {\n  _s();\n  const [array, setArray] = useState([]);\n  const [sortedArray, setSortedArray] = useState([]);\n  const handleInputChange = event => {\n    const inputArray = event.target.value.split(\",\").map(num => Number(num.trim()));\n    setArray(inputArray);\n  };\n  const quickSort = arr => {\n    if (arr.length <= 1) {\n      return arr;\n    }\n    const pivot = arr[arr.length - 1];\n    const leftArray = [];\n    const rightArray = [];\n    for (let i = 0; i < arr.length - 1; i++) {\n      if (arr[i] < pivot) {\n        leftArray.push(arr[i]);\n      } else {\n        rightArray.push(arr[i]);\n      }\n    }\n    return [...quickSort(leftArray), pivot, ...quickSort(rightArray)];\n  };\n  const handleSortClick = () => {\n    const sorted = quickSort(array);\n    setSortedArray(sorted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Digite um array de n\\xFAmeros separados por v\\xEDrgula:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSortClick,\n      children: \"Ordenar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), sortedArray.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Array Ordenado: \", sortedArray.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(QuickSort, \"C7sc54NTmlSy78CavNY38+4N4WQ=\");\n_c = QuickSort;\nexport default QuickSort;\nvar _c;\n$RefreshReg$(_c, \"QuickSort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuickSort","_s","array","setArray","sortedArray","setSortedArray","handleInputChange","event","inputArray","target","value","split","map","num","Number","trim","quickSort","arr","length","pivot","leftArray","rightArray","i","push","handleSortClick","sorted","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","join","_c","$RefreshReg$"],"sources":["/Users/lucasfrotabarroso/Desktop/algoritmo-react-atividade02/src/componentes/QuickSort/index.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction QuickSort() {\n  const [array, setArray] = useState([]);\n  const [sortedArray, setSortedArray] = useState([]);\n\n  const handleInputChange = (event) => {\n    const inputArray = event.target.value.split(\",\").map((num) => Number(num.trim()));\n    setArray(inputArray);\n  };\n\n  const quickSort = (arr) => {\n    if (arr.length <= 1) {\n      return arr;\n    }\n    const pivot = arr[arr.length - 1];\n    const leftArray = [];\n    const rightArray = [];\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      if (arr[i] < pivot) {\n        leftArray.push(arr[i]);\n      } else {\n        rightArray.push(arr[i]);\n      }\n    }\n\n    return [...quickSort(leftArray), pivot, ...quickSort(rightArray)];\n  };\n\n  const handleSortClick = () => {\n    const sorted = quickSort(array);\n    setSortedArray(sorted);\n  };\n\n  return (\n    <div>\n      <label>Digite um array de números separados por vírgula:</label>\n      <input type=\"text\" onChange={handleInputChange} />\n      <button onClick={handleSortClick}>Ordenar</button>\n      {sortedArray.length > 0 && <div>Array Ordenado: {sortedArray.join(\", \")}</div>}\n    </div>\n  );\n}\n\nexport default QuickSort;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKC,MAAM,CAACD,GAAG,CAACE,IAAI,EAAE,CAAC,CAAC;IACjFZ,QAAQ,CAACK,UAAU,CAAC;EACtB,CAAC;EAED,MAAMQ,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAIA,GAAG,CAACC,MAAM,IAAI,CAAC,EAAE;MACnB,OAAOD,GAAG;IACZ;IACA,MAAME,KAAK,GAAGF,GAAG,CAACA,GAAG,CAACC,MAAM,GAAG,CAAC,CAAC;IACjC,MAAME,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,EAAE;IAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACC,MAAM,GAAG,CAAC,EAAEI,CAAC,EAAE,EAAE;MACvC,IAAIL,GAAG,CAACK,CAAC,CAAC,GAAGH,KAAK,EAAE;QAClBC,SAAS,CAACG,IAAI,CAACN,GAAG,CAACK,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM;QACLD,UAAU,CAACE,IAAI,CAACN,GAAG,CAACK,CAAC,CAAC,CAAC;MACzB;IACF;IAEA,OAAO,CAAC,GAAGN,SAAS,CAACI,SAAS,CAAC,EAAED,KAAK,EAAE,GAAGH,SAAS,CAACK,UAAU,CAAC,CAAC;EACnE,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,MAAM,GAAGT,SAAS,CAACd,KAAK,CAAC;IAC/BG,cAAc,CAACoB,MAAM,CAAC;EACxB,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAO;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAChE/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClD/B,OAAA;MAAQkC,OAAO,EAAET,eAAgB;MAAAE,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACjD1B,WAAW,CAACc,MAAM,GAAG,CAAC,iBAAInB,OAAA;MAAA2B,QAAA,GAAK,kBAAgB,EAACtB,WAAW,CAAC8B,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1E;AAEV;AAAC7B,EAAA,CAzCQD,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA2ClB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}